// COLUMNAL - CORE
///*/////////////////////////////////////////// */

/* Column code based on work from cssgrid.net: 
 *The 1140px Grid by Andy Taylor – http://cssgrid.net – http://www.twitter.com/andytlr – http://www.catchingzebra.com
@import text
@import compass/css3

$columnal-grid-width: 1140px !default

$columnal-columns: 12 !default

$columnal-class-separator: "_" !default

// Some basic presets
img, object, embed
  margin-bottom: 20px
  max-width: 100%

img 
  +border-radius(3px)
  margin-bottom: 20px

a img
  display: block

=grid-container
  padding-left: 20px
  padding-right: 20px
  img, object, embed
    max-width: 100%
  @media handheld, only screen and (max-width: 767px)
    width: 100%
    margin-left: 0
    margin-right: 0
    padding-left: 0
    padding-right: 0
    h1
      margin: .5em 0 .5em
    h2
      margin: .5em 0 .535em
    h3
      margin: .5em 0 .57em
    h4
      margin: .5em 0 .615em
    h5
      margin: .5em 0 .67em
    h6
      margin: .5em 0 .8em

=grid-row($grid-width: $columnal-grid-width)
  clear: both
  width: 100%
  max-width: $grid-width
  margin: 0 auto
  overflow: hidden
  @media handheld, only screen and (max-width: 767px)
    width: 100%
    margin-left: 0
    margin-right: 0
    padding-left: 0
    padding-right: 0

=grid-unit-base
  float: left
  margin-right: 3.8%
  position: relative
  @media handheld, only screen and (max-width: 767px)
    clear: both
    float: none
    margin-left: 0
    margin-right: 0
    padding-left: 20px
    padding-right: 20px
    width: auto
    width: -moz-available

=grid($n)
  +grid-unit-base
  width: (4.85% + 8.65% * ($n - 1))
  @if $n == 12
    clear: both
    float: left

=grid-subcolumn($n1, $n2)
  $col_width: (4.85% + 8.65% * ($n1 - 1))
  width: ((4.85% + 8.65% * ($n2 - 1)) / $col_width * 100%)
  margin-right: (3.8% / $col_width * 100%)
  float: left
  position: relative

=grid-prefix($n)
  padding-left: ($n*8.65%)
  @media handheld, only screen and (max-width: 767px)
    padding-left: 0

=grid-suffix($n)
  padding-right: ($n*8.65%)
  @media handheld, only screen and (max-width: 767px)
    padding-right: 0

=last
  +omega

=omega
  margin-right: 0 !important

=margin-top($n)
  margin-top: $n !important

=margin-bottom($n)
  margin-bottom: $n !important

=padding-top($n)
  padding-top: $n !important

=padding-bottom($n)
  padding-bottom: $n !important

=grids($cols: $columnal-columns)
  #{enumerate(".col", 1, $cols, $columnal-class-separator)}
  @for $n from 1 through $cols
    .col#{$columnal-class-separator}#{$n}
      +grid($n)

=grid-subcolumns($cols: $columnal-columns)
  #{enumerate(".col", 1, $cols, $columnal-class-separator)}
  @for $n from 1 through $cols
    .col#{$columnal-class-separator}#{$n}
      @for $sub from 1 through ($n - 1)
        .col#{$columnal-class-separator}#{$sub}
          +grid-subcolumn($n, $sub)
        .pre#{$columnal-class-separator}#{$sub}
          +grid-subcolumn-prefix($n, $sub)
        .suf#{$columnal-class-separator}#{$sub}
          +grid-subcolumn-suffix($n, $sub)

=grid-subcolumn-prefix($n1, $n2)
  $col_width: (4.85% + 8.65% * ($n1 - 1))
  padding-left: ((4.85% + 8.65% * ($n2 - 1)) / $col_width * 100%)
  float: left
  position: relative

=grid-subcolumn-suffix($n1, $n2)
  $col_width: (4.85% + 8.65% * ($n1 - 1))
  padding-right: ((4.85% + 8.65% * ($n2 - 1)) / $col_width * 100%)
  float: left
  position: relative

=grid-prefixes-sufixes($cols: $columnal-columns)
  @for $n from 1 through $cols - 1
    .pre#{$columnal-class-separator}#{$n}
      +grid-prefix($n)
    .suf#{$columnal-class-separator}#{$n}
      +grid-suffix($n)

=grid-system-complete
  +grids
  +grid-subcolumns
  +grid-prefixes-sufixes
  +text
  .row
    +grid-row
  .container
    +grid-container
  .last, .omega
    +last

/*
 *_______________________________
 *Columnal - extras

.clear, .clearboth
  clear: both !important

.clearleft
  clear: left !important

.clearright
  clear: right !important

.textcenter
  text-align: center

.textright
  text-align: right

.textleft
  text-align: left

/* this will insert a pseduo element clears floats for an element containing floated content

.selfclear:after
  clear: both
  content: "."
  display: block
  height: 0
  visibility: hidden

=mobile-only
  display: none
  @media handheld, only screen and (max-width: 767px)
    display: block

=mobile-hide
  @media handheld, only screen and (max-width: 767px)
    display: none

